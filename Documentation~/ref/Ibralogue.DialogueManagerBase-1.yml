### YamlMime:ManagedReference
items:
- uid: Ibralogue.DialogueManagerBase`1
  commentId: T:Ibralogue.DialogueManagerBase`1
  id: DialogueManagerBase`1
  parent: Ibralogue
  children:
  - Ibralogue.DialogueManagerBase`1._choiceButtonInstances
  - Ibralogue.DialogueManagerBase`1._currentConversation
  - Ibralogue.DialogueManagerBase`1._lineIndex
  - Ibralogue.DialogueManagerBase`1._linePlaying
  - Ibralogue.DialogueManagerBase`1.choiceButton
  - Ibralogue.DialogueManagerBase`1.choiceButtonHolder
  - Ibralogue.DialogueManagerBase`1.ClearChoiceButton(Ibralogue.DialogueManagerBase{`0}.ChoiceButtonHandle)
  - Ibralogue.DialogueManagerBase`1.CreateChoiceButton
  - Ibralogue.DialogueManagerBase`1.DisplayChoices
  - Ibralogue.DialogueManagerBase`1.DisplaySpeakerImage
  - Ibralogue.DialogueManagerBase`1.JumpTo(System.String)
  - Ibralogue.DialogueManagerBase`1.nameText
  - Ibralogue.DialogueManagerBase`1.OnConversationEnd
  - Ibralogue.DialogueManagerBase`1.OnConversationStart
  - Ibralogue.DialogueManagerBase`1.ParsedConversations
  - Ibralogue.DialogueManagerBase`1.PrepareChoiceButton(Ibralogue.DialogueManagerBase{`0}.ChoiceButtonHandle,Choice)
  - Ibralogue.DialogueManagerBase`1.RemoveChoiceButton(Ibralogue.DialogueManagerBase{`0}.ChoiceButtonHandle)
  - Ibralogue.DialogueManagerBase`1.scrollSpeed
  - Ibralogue.DialogueManagerBase`1.sentenceText
  - Ibralogue.DialogueManagerBase`1.SkipLineAnimation
  - Ibralogue.DialogueManagerBase`1.speakerPortrait
  - Ibralogue.DialogueManagerBase`1.StartConversation(Ibralogue.DialogueAsset,System.Int32)
  - Ibralogue.DialogueManagerBase`1.StopConversation
  - Ibralogue.DialogueManagerBase`1.TryAdvanceDialogue
  - Ibralogue.DialogueManagerBase`1.TryDisplayNextLine
  langs:
  - csharp
  - vb
  name: DialogueManagerBase<ChoiceButtonT>
  nameWithType: DialogueManagerBase<ChoiceButtonT>
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>
  type: Class
  source:
    id: DialogueManagerBase
    path: ''
    startLine: 96
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: 'public abstract class DialogueManagerBase<ChoiceButtonT> : MonoBehaviour where ChoiceButtonT : Component'
    typeParameters:
    - id: ChoiceButtonT
    content.vb: >-
      Public MustInherit Class DialogueManagerBase(Of ChoiceButtonT As Component)

          Inherits MonoBehaviour
  inheritance:
  - System.Object
  derivedClasses:
  - Ibralogue.DefaultDialogueManager
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT)
  name.vb: DialogueManagerBase(Of ChoiceButtonT)
- uid: Ibralogue.DialogueManagerBase`1.OnConversationStart
  commentId: P:Ibralogue.DialogueManagerBase`1.OnConversationStart
  id: OnConversationStart
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: OnConversationStart
  nameWithType: DialogueManagerBase<ChoiceButtonT>.OnConversationStart
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.OnConversationStart
  type: Property
  source:
    id: OnConversationStart
    path: ''
    startLine: 98
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: public UnityEvent OnConversationStart { get; set; }
    parameters: []
    return:
      type: Global.UnityEvent
    content.vb: Public Property OnConversationStart As UnityEvent
  overload: Ibralogue.DialogueManagerBase`1.OnConversationStart*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).OnConversationStart
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).OnConversationStart
- uid: Ibralogue.DialogueManagerBase`1.OnConversationEnd
  commentId: P:Ibralogue.DialogueManagerBase`1.OnConversationEnd
  id: OnConversationEnd
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: OnConversationEnd
  nameWithType: DialogueManagerBase<ChoiceButtonT>.OnConversationEnd
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.OnConversationEnd
  type: Property
  source:
    id: OnConversationEnd
    path: ''
    startLine: 99
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: public UnityEvent OnConversationEnd { get; set; }
    parameters: []
    return:
      type: Global.UnityEvent
    content.vb: Public Property OnConversationEnd As UnityEvent
  overload: Ibralogue.DialogueManagerBase`1.OnConversationEnd*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).OnConversationEnd
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).OnConversationEnd
- uid: Ibralogue.DialogueManagerBase`1.ParsedConversations
  commentId: P:Ibralogue.DialogueManagerBase`1.ParsedConversations
  id: ParsedConversations
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: ParsedConversations
  nameWithType: DialogueManagerBase<ChoiceButtonT>.ParsedConversations
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.ParsedConversations
  type: Property
  source:
    id: ParsedConversations
    path: ''
    startLine: 101
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: public List<Conversation> ParsedConversations { get; protected set; }
    parameters: []
    return:
      type: Global.List{Conversation}
    content.vb: Public Property ParsedConversations As List(Of Conversation)
  overload: Ibralogue.DialogueManagerBase`1.ParsedConversations*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).ParsedConversations
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).ParsedConversations
- uid: Ibralogue.DialogueManagerBase`1._currentConversation
  commentId: F:Ibralogue.DialogueManagerBase`1._currentConversation
  id: _currentConversation
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: _currentConversation
  nameWithType: DialogueManagerBase<ChoiceButtonT>._currentConversation
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>._currentConversation
  type: Field
  source:
    id: _currentConversation
    path: ''
    startLine: 102
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected Conversation _currentConversation
    return:
      type: Global.Conversation
    content.vb: Protected _currentConversation As Conversation
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT)._currentConversation
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT)._currentConversation
- uid: Ibralogue.DialogueManagerBase`1._lineIndex
  commentId: F:Ibralogue.DialogueManagerBase`1._lineIndex
  id: _lineIndex
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: _lineIndex
  nameWithType: DialogueManagerBase<ChoiceButtonT>._lineIndex
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>._lineIndex
  type: Field
  source:
    id: _lineIndex
    path: ''
    startLine: 104
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected int _lineIndex
    return:
      type: System.Int32
    content.vb: Protected _lineIndex As Integer
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT)._lineIndex
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT)._lineIndex
- uid: Ibralogue.DialogueManagerBase`1._linePlaying
  commentId: F:Ibralogue.DialogueManagerBase`1._linePlaying
  id: _linePlaying
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: _linePlaying
  nameWithType: DialogueManagerBase<ChoiceButtonT>._linePlaying
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>._linePlaying
  type: Field
  source:
    id: _linePlaying
    path: ''
    startLine: 105
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected bool _linePlaying
    return:
      type: System.Boolean
    content.vb: Protected _linePlaying As Boolean
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT)._linePlaying
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT)._linePlaying
- uid: Ibralogue.DialogueManagerBase`1.scrollSpeed
  commentId: F:Ibralogue.DialogueManagerBase`1.scrollSpeed
  id: scrollSpeed
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: scrollSpeed
  nameWithType: DialogueManagerBase<ChoiceButtonT>.scrollSpeed
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.scrollSpeed
  type: Field
  source:
    id: scrollSpeed
    path: ''
    startLine: 108
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected float scrollSpeed
    return:
      type: System.Single
    content.vb: Protected scrollSpeed As Single
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).scrollSpeed
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).scrollSpeed
- uid: Ibralogue.DialogueManagerBase`1.nameText
  commentId: F:Ibralogue.DialogueManagerBase`1.nameText
  id: nameText
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: nameText
  nameWithType: DialogueManagerBase<ChoiceButtonT>.nameText
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.nameText
  type: Field
  source:
    id: nameText
    path: ''
    startLine: 110
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected TextMeshProUGUI nameText
    return:
      type: Global.TextMeshProUGUI
    content.vb: Protected nameText As TextMeshProUGUI
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).nameText
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).nameText
- uid: Ibralogue.DialogueManagerBase`1.sentenceText
  commentId: F:Ibralogue.DialogueManagerBase`1.sentenceText
  id: sentenceText
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: sentenceText
  nameWithType: DialogueManagerBase<ChoiceButtonT>.sentenceText
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.sentenceText
  type: Field
  source:
    id: sentenceText
    path: ''
    startLine: 111
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected TextMeshProUGUI sentenceText
    return:
      type: Global.TextMeshProUGUI
    content.vb: Protected sentenceText As TextMeshProUGUI
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).sentenceText
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).sentenceText
- uid: Ibralogue.DialogueManagerBase`1.speakerPortrait
  commentId: F:Ibralogue.DialogueManagerBase`1.speakerPortrait
  id: speakerPortrait
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: speakerPortrait
  nameWithType: DialogueManagerBase<ChoiceButtonT>.speakerPortrait
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.speakerPortrait
  type: Field
  source:
    id: speakerPortrait
    path: ''
    startLine: 112
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected Image speakerPortrait
    return:
      type: Global.Image
    content.vb: Protected speakerPortrait As Image
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).speakerPortrait
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).speakerPortrait
- uid: Ibralogue.DialogueManagerBase`1.choiceButtonHolder
  commentId: F:Ibralogue.DialogueManagerBase`1.choiceButtonHolder
  id: choiceButtonHolder
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: choiceButtonHolder
  nameWithType: DialogueManagerBase<ChoiceButtonT>.choiceButtonHolder
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.choiceButtonHolder
  type: Field
  source:
    id: choiceButtonHolder
    path: ''
    startLine: 114
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected Transform choiceButtonHolder
    return:
      type: Global.Transform
    content.vb: Protected choiceButtonHolder As Transform
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).choiceButtonHolder
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).choiceButtonHolder
- uid: Ibralogue.DialogueManagerBase`1.choiceButton
  commentId: F:Ibralogue.DialogueManagerBase`1.choiceButton
  id: choiceButton
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: choiceButton
  nameWithType: DialogueManagerBase<ChoiceButtonT>.choiceButton
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.choiceButton
  type: Field
  source:
    id: choiceButton
    path: ''
    startLine: 115
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected ChoiceButtonT choiceButton
    return:
      type: '{ChoiceButtonT}'
    content.vb: Protected choiceButton As ChoiceButtonT
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).choiceButton
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).choiceButton
- uid: Ibralogue.DialogueManagerBase`1._choiceButtonInstances
  commentId: F:Ibralogue.DialogueManagerBase`1._choiceButtonInstances
  id: _choiceButtonInstances
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: _choiceButtonInstances
  nameWithType: DialogueManagerBase<ChoiceButtonT>._choiceButtonInstances
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>._choiceButtonInstances
  type: Field
  source:
    id: _choiceButtonInstances
    path: ''
    startLine: 116
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected List<DialogueManagerBase<ChoiceButtonT>.ChoiceButtonHandle> _choiceButtonInstances
    return:
      type: Global.List{Ibralogue.DialogueManagerBase`1.ChoiceButtonHandle}
    content.vb: Protected _choiceButtonInstances As List(Of DialogueManagerBase(Of ChoiceButtonT).ChoiceButtonHandle)
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT)._choiceButtonInstances
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT)._choiceButtonInstances
- uid: Ibralogue.DialogueManagerBase`1.StartConversation(Ibralogue.DialogueAsset,System.Int32)
  commentId: M:Ibralogue.DialogueManagerBase`1.StartConversation(Ibralogue.DialogueAsset,System.Int32)
  id: StartConversation(Ibralogue.DialogueAsset,System.Int32)
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: StartConversation(DialogueAsset, Int32)
  nameWithType: DialogueManagerBase<ChoiceButtonT>.StartConversation(DialogueAsset, Int32)
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.StartConversation(Ibralogue.DialogueAsset, System.Int32)
  type: Method
  source:
    id: StartConversation
    path: ''
    startLine: 129
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  summary: "\nStarts a dialogue by parsing all the text in a file, clearing the dialogue box and starting the <xref href=\"Ibralogue.DialogueManagerBase%601.DisplayDialogue\" data-throw-if-not-resolved=\"false\"></xref> function.\n"
  example: []
  syntax:
    content: public void StartConversation(DialogueAsset interactionDialogue, int startIndex = 0)
    parameters:
    - id: interactionDialogue
      type: Ibralogue.DialogueAsset
      description: The dialogue file that we want to use in the conversation
    - id: startIndex
      type: System.Int32
      description: The index of the conversation you want to start.
    content.vb: Public Sub StartConversation(interactionDialogue As DialogueAsset, startIndex As Integer = 0)
  overload: Ibralogue.DialogueManagerBase`1.StartConversation*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).StartConversation(DialogueAsset, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).StartConversation(Ibralogue.DialogueAsset, System.Int32)
- uid: Ibralogue.DialogueManagerBase`1.StopConversation
  commentId: M:Ibralogue.DialogueManagerBase`1.StopConversation
  id: StopConversation
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: StopConversation()
  nameWithType: DialogueManagerBase<ChoiceButtonT>.StopConversation()
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.StopConversation()
  type: Method
  source:
    id: StopConversation
    path: ''
    startLine: 162
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  summary: "\nStops the currently playing conversation and clears the dialogue box.\n"
  example: []
  syntax:
    content: public void StopConversation()
    content.vb: Public Sub StopConversation
  overload: Ibralogue.DialogueManagerBase`1.StopConversation*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).StopConversation()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).StopConversation()
- uid: Ibralogue.DialogueManagerBase`1.JumpTo(System.String)
  commentId: M:Ibralogue.DialogueManagerBase`1.JumpTo(System.String)
  id: JumpTo(System.String)
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: JumpTo(String)
  nameWithType: DialogueManagerBase<ChoiceButtonT>.JumpTo(String)
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.JumpTo(System.String)
  type: Method
  source:
    id: JumpTo
    path: ''
    startLine: 175
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  summary: "\nJumps to a  given conversation in the dialogue by using its name.\n"
  example: []
  syntax:
    content: public void JumpTo(string conversationName)
    parameters:
    - id: conversationName
      type: System.String
      description: Name as seen in the DialogueAsset
    content.vb: Public Sub JumpTo(conversationName As String)
  overload: Ibralogue.DialogueManagerBase`1.JumpTo*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).JumpTo(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).JumpTo(System.String)
- uid: Ibralogue.DialogueManagerBase`1.TryDisplayNextLine
  commentId: M:Ibralogue.DialogueManagerBase`1.TryDisplayNextLine
  id: TryDisplayNextLine
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: TryDisplayNextLine()
  nameWithType: DialogueManagerBase<ChoiceButtonT>.TryDisplayNextLine()
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.TryDisplayNextLine()
  type: Method
  source:
    id: TryDisplayNextLine
    path: ''
    startLine: 266
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  summary: "\nClears the dialogue box and displays the next <see cref=\"!:Line\"></see> if no sentences are left in the\ncurrent one.\n"
  example: []
  syntax:
    content: public void TryDisplayNextLine()
    content.vb: Public Sub TryDisplayNextLine
  overload: Ibralogue.DialogueManagerBase`1.TryDisplayNextLine*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).TryDisplayNextLine()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).TryDisplayNextLine()
- uid: Ibralogue.DialogueManagerBase`1.SkipLineAnimation
  commentId: M:Ibralogue.DialogueManagerBase`1.SkipLineAnimation
  id: SkipLineAnimation
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: SkipLineAnimation()
  nameWithType: DialogueManagerBase<ChoiceButtonT>.SkipLineAnimation()
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.SkipLineAnimation()
  type: Method
  source:
    id: SkipLineAnimation
    path: ''
    startLine: 288
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  summary: "\nSkip the typewriter animation of the sentence.\n"
  example: []
  syntax:
    content: public void SkipLineAnimation()
    content.vb: Public Sub SkipLineAnimation
  overload: Ibralogue.DialogueManagerBase`1.SkipLineAnimation*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).SkipLineAnimation()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).SkipLineAnimation()
- uid: Ibralogue.DialogueManagerBase`1.TryAdvanceDialogue
  commentId: M:Ibralogue.DialogueManagerBase`1.TryAdvanceDialogue
  id: TryAdvanceDialogue
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: TryAdvanceDialogue()
  nameWithType: DialogueManagerBase<ChoiceButtonT>.TryAdvanceDialogue()
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.TryAdvanceDialogue()
  type: Method
  source:
    id: TryAdvanceDialogue
    path: ''
    startLine: 298
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: public void TryAdvanceDialogue()
    content.vb: Public Sub TryAdvanceDialogue
  overload: Ibralogue.DialogueManagerBase`1.TryAdvanceDialogue*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).TryAdvanceDialogue()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).TryAdvanceDialogue()
- uid: Ibralogue.DialogueManagerBase`1.DisplayChoices
  commentId: M:Ibralogue.DialogueManagerBase`1.DisplayChoices
  id: DisplayChoices
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: DisplayChoices()
  nameWithType: DialogueManagerBase<ChoiceButtonT>.DisplayChoices()
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.DisplayChoices()
  type: Method
  source:
    id: DisplayChoices
    path: ''
    startLine: 314
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  summary: "\nUses the Unity UI system and TextMeshPro to render choice buttons.\n"
  example: []
  syntax:
    content: protected void DisplayChoices()
    content.vb: Protected Sub DisplayChoices
  overload: Ibralogue.DialogueManagerBase`1.DisplayChoices*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).DisplayChoices()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).DisplayChoices()
- uid: Ibralogue.DialogueManagerBase`1.PrepareChoiceButton(Ibralogue.DialogueManagerBase{`0}.ChoiceButtonHandle,Choice)
  commentId: M:Ibralogue.DialogueManagerBase`1.PrepareChoiceButton(Ibralogue.DialogueManagerBase{`0}.ChoiceButtonHandle,Choice)
  id: PrepareChoiceButton(Ibralogue.DialogueManagerBase{`0}.ChoiceButtonHandle,Choice)
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: PrepareChoiceButton(DialogueManagerBase<ChoiceButtonT>.ChoiceButtonHandle, Choice)
  nameWithType: DialogueManagerBase<ChoiceButtonT>.PrepareChoiceButton(DialogueManagerBase<ChoiceButtonT>.ChoiceButtonHandle, Choice)
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.PrepareChoiceButton(Ibralogue.DialogueManagerBase<ChoiceButtonT>.ChoiceButtonHandle, Choice)
  type: Method
  source:
    id: PrepareChoiceButton
    path: ''
    startLine: 356
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected abstract void PrepareChoiceButton(DialogueManagerBase<ChoiceButtonT>.ChoiceButtonHandle handle, Choice choice)
    parameters:
    - id: handle
      type: Ibralogue.DialogueManagerBase`1.ChoiceButtonHandle
    - id: choice
      type: Global.Choice
    content.vb: Protected MustOverride Sub PrepareChoiceButton(handle As DialogueManagerBase(Of ChoiceButtonT).ChoiceButtonHandle, choice As Choice)
  overload: Ibralogue.DialogueManagerBase`1.PrepareChoiceButton*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).PrepareChoiceButton(DialogueManagerBase(Of ChoiceButtonT).ChoiceButtonHandle, Choice)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).PrepareChoiceButton(Ibralogue.DialogueManagerBase(Of ChoiceButtonT).ChoiceButtonHandle, Choice)
  name.vb: PrepareChoiceButton(DialogueManagerBase(Of ChoiceButtonT).ChoiceButtonHandle, Choice)
- uid: Ibralogue.DialogueManagerBase`1.DisplaySpeakerImage
  commentId: M:Ibralogue.DialogueManagerBase`1.DisplaySpeakerImage
  id: DisplaySpeakerImage
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: DisplaySpeakerImage()
  nameWithType: DialogueManagerBase<ChoiceButtonT>.DisplaySpeakerImage()
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.DisplaySpeakerImage()
  type: Method
  source:
    id: DisplaySpeakerImage
    path: ''
    startLine: 390
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  summary: "\nSets the speaker image and makes the Image transparent if there is no speaker image.\n"
  example: []
  syntax:
    content: protected void DisplaySpeakerImage()
    content.vb: Protected Sub DisplaySpeakerImage
  overload: Ibralogue.DialogueManagerBase`1.DisplaySpeakerImage*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).DisplaySpeakerImage()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).DisplaySpeakerImage()
- uid: Ibralogue.DialogueManagerBase`1.CreateChoiceButton
  commentId: M:Ibralogue.DialogueManagerBase`1.CreateChoiceButton
  id: CreateChoiceButton
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: CreateChoiceButton()
  nameWithType: DialogueManagerBase<ChoiceButtonT>.CreateChoiceButton()
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.CreateChoiceButton()
  type: Method
  source:
    id: CreateChoiceButton
    path: ''
    startLine: 421
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected virtual ChoiceButtonT CreateChoiceButton()
    return:
      type: '{ChoiceButtonT}'
    content.vb: Protected Overridable Function CreateChoiceButton As ChoiceButtonT
  overload: Ibralogue.DialogueManagerBase`1.CreateChoiceButton*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).CreateChoiceButton()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).CreateChoiceButton()
- uid: Ibralogue.DialogueManagerBase`1.ClearChoiceButton(Ibralogue.DialogueManagerBase{`0}.ChoiceButtonHandle)
  commentId: M:Ibralogue.DialogueManagerBase`1.ClearChoiceButton(Ibralogue.DialogueManagerBase{`0}.ChoiceButtonHandle)
  id: ClearChoiceButton(Ibralogue.DialogueManagerBase{`0}.ChoiceButtonHandle)
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: ClearChoiceButton(DialogueManagerBase<ChoiceButtonT>.ChoiceButtonHandle)
  nameWithType: DialogueManagerBase<ChoiceButtonT>.ClearChoiceButton(DialogueManagerBase<ChoiceButtonT>.ChoiceButtonHandle)
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.ClearChoiceButton(Ibralogue.DialogueManagerBase<ChoiceButtonT>.ChoiceButtonHandle)
  type: Method
  source:
    id: ClearChoiceButton
    path: ''
    startLine: 426
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected virtual void ClearChoiceButton(DialogueManagerBase<ChoiceButtonT>.ChoiceButtonHandle buttonHandle)
    parameters:
    - id: buttonHandle
      type: Ibralogue.DialogueManagerBase`1.ChoiceButtonHandle
    content.vb: Protected Overridable Sub ClearChoiceButton(buttonHandle As DialogueManagerBase(Of ChoiceButtonT).ChoiceButtonHandle)
  overload: Ibralogue.DialogueManagerBase`1.ClearChoiceButton*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).ClearChoiceButton(DialogueManagerBase(Of ChoiceButtonT).ChoiceButtonHandle)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).ClearChoiceButton(Ibralogue.DialogueManagerBase(Of ChoiceButtonT).ChoiceButtonHandle)
  name.vb: ClearChoiceButton(DialogueManagerBase(Of ChoiceButtonT).ChoiceButtonHandle)
- uid: Ibralogue.DialogueManagerBase`1.RemoveChoiceButton(Ibralogue.DialogueManagerBase{`0}.ChoiceButtonHandle)
  commentId: M:Ibralogue.DialogueManagerBase`1.RemoveChoiceButton(Ibralogue.DialogueManagerBase{`0}.ChoiceButtonHandle)
  id: RemoveChoiceButton(Ibralogue.DialogueManagerBase{`0}.ChoiceButtonHandle)
  parent: Ibralogue.DialogueManagerBase`1
  langs:
  - csharp
  - vb
  name: RemoveChoiceButton(DialogueManagerBase<ChoiceButtonT>.ChoiceButtonHandle)
  nameWithType: DialogueManagerBase<ChoiceButtonT>.RemoveChoiceButton(DialogueManagerBase<ChoiceButtonT>.ChoiceButtonHandle)
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.RemoveChoiceButton(Ibralogue.DialogueManagerBase<ChoiceButtonT>.ChoiceButtonHandle)
  type: Method
  source:
    id: RemoveChoiceButton
    path: ''
    startLine: 431
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue
  syntax:
    content: protected virtual void RemoveChoiceButton(DialogueManagerBase<ChoiceButtonT>.ChoiceButtonHandle buttonHandle)
    parameters:
    - id: buttonHandle
      type: Ibralogue.DialogueManagerBase`1.ChoiceButtonHandle
    content.vb: Protected Overridable Sub RemoveChoiceButton(buttonHandle As DialogueManagerBase(Of ChoiceButtonT).ChoiceButtonHandle)
  overload: Ibralogue.DialogueManagerBase`1.RemoveChoiceButton*
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).RemoveChoiceButton(DialogueManagerBase(Of ChoiceButtonT).ChoiceButtonHandle)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).RemoveChoiceButton(Ibralogue.DialogueManagerBase(Of ChoiceButtonT).ChoiceButtonHandle)
  name.vb: RemoveChoiceButton(DialogueManagerBase(Of ChoiceButtonT).ChoiceButtonHandle)
references:
- uid: Ibralogue
  commentId: N:Ibralogue
  name: Ibralogue
  nameWithType: Ibralogue
  fullName: Ibralogue
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Ibralogue.DialogueManagerBase`1.OnConversationStart*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.OnConversationStart
  name: OnConversationStart
  nameWithType: DialogueManagerBase<ChoiceButtonT>.OnConversationStart
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.OnConversationStart
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).OnConversationStart
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).OnConversationStart
- uid: Global.UnityEvent
  isExternal: true
  name: UnityEvent
  nameWithType: UnityEvent
  fullName: UnityEvent
- uid: Ibralogue.DialogueManagerBase`1.OnConversationEnd*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.OnConversationEnd
  name: OnConversationEnd
  nameWithType: DialogueManagerBase<ChoiceButtonT>.OnConversationEnd
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.OnConversationEnd
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).OnConversationEnd
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).OnConversationEnd
- uid: Ibralogue.DialogueManagerBase`1.ParsedConversations*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.ParsedConversations
  name: ParsedConversations
  nameWithType: DialogueManagerBase<ChoiceButtonT>.ParsedConversations
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.ParsedConversations
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).ParsedConversations
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).ParsedConversations
- uid: Global.List{Conversation}
  commentId: '!:Global.List{Conversation}'
  definition: Global.List`1
  name: List<Conversation>
  nameWithType: List<Conversation>
  fullName: List<Conversation>
  nameWithType.vb: List(Of Conversation)
  fullName.vb: List(Of Conversation)
  name.vb: List(Of Conversation)
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.Conversation
    name: Conversation
    nameWithType: Conversation
    fullName: Conversation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.Conversation
    name: Conversation
    nameWithType: Conversation
    fullName: Conversation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Conversation
  commentId: '!:Global.Conversation'
  isExternal: true
  name: Conversation
  nameWithType: Conversation
  fullName: Conversation
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Global.TextMeshProUGUI
  isExternal: true
  name: TextMeshProUGUI
  nameWithType: TextMeshProUGUI
  fullName: TextMeshProUGUI
- uid: Global.Image
  commentId: '!:Global.Image'
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: Image
- uid: Global.Transform
  commentId: '!:Global.Transform'
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Transform
- uid: '{ChoiceButtonT}'
  commentId: '!:ChoiceButtonT'
  definition: ChoiceButtonT
  name: ChoiceButtonT
  nameWithType: ChoiceButtonT
  fullName: ChoiceButtonT
- uid: ChoiceButtonT
  name: ChoiceButtonT
  nameWithType: ChoiceButtonT
  fullName: ChoiceButtonT
- uid: Global.List{Ibralogue.DialogueManagerBase`1.ChoiceButtonHandle}
  commentId: '!:Global.List{Ibralogue.DialogueManagerBase`1.ChoiceButtonHandle}'
  definition: Global.List`1
  name: List<DialogueManagerBase.ChoiceButtonHandle<>>
  nameWithType: List<DialogueManagerBase.ChoiceButtonHandle<>>
  fullName: List<Ibralogue.DialogueManagerBase.ChoiceButtonHandle<>>
  nameWithType.vb: List(Of DialogueManagerBase.ChoiceButtonHandle(Of ))
  fullName.vb: List(Of Ibralogue.DialogueManagerBase.ChoiceButtonHandle(Of ))
  name.vb: List(Of DialogueManagerBase.ChoiceButtonHandle(Of ))
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Ibralogue.DialogueManagerBase`1.ChoiceButtonHandle
    name: DialogueManagerBase.ChoiceButtonHandle
    nameWithType: DialogueManagerBase.ChoiceButtonHandle
    fullName: Ibralogue.DialogueManagerBase.ChoiceButtonHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Ibralogue.DialogueManagerBase`1.ChoiceButtonHandle
    name: DialogueManagerBase.ChoiceButtonHandle
    nameWithType: DialogueManagerBase.ChoiceButtonHandle
    fullName: Ibralogue.DialogueManagerBase.ChoiceButtonHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ibralogue.DialogueManagerBase`1.DisplayDialogue
  commentId: M:Ibralogue.DialogueManagerBase`1.DisplayDialogue
  isExternal: true
- uid: Ibralogue.DialogueManagerBase`1.StartConversation*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.StartConversation
  name: StartConversation
  nameWithType: DialogueManagerBase<ChoiceButtonT>.StartConversation
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.StartConversation
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).StartConversation
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).StartConversation
- uid: Ibralogue.DialogueAsset
  commentId: T:Ibralogue.DialogueAsset
  parent: Ibralogue
  name: DialogueAsset
  nameWithType: DialogueAsset
  fullName: Ibralogue.DialogueAsset
- uid: Ibralogue.DialogueManagerBase`1.StopConversation*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.StopConversation
  name: StopConversation
  nameWithType: DialogueManagerBase<ChoiceButtonT>.StopConversation
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.StopConversation
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).StopConversation
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).StopConversation
- uid: Ibralogue.DialogueManagerBase`1.JumpTo*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.JumpTo
  name: JumpTo
  nameWithType: DialogueManagerBase<ChoiceButtonT>.JumpTo
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.JumpTo
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).JumpTo
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).JumpTo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Ibralogue.DialogueManagerBase`1.TryDisplayNextLine*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.TryDisplayNextLine
  name: TryDisplayNextLine
  nameWithType: DialogueManagerBase<ChoiceButtonT>.TryDisplayNextLine
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.TryDisplayNextLine
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).TryDisplayNextLine
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).TryDisplayNextLine
- uid: Ibralogue.DialogueManagerBase`1.SkipLineAnimation*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.SkipLineAnimation
  name: SkipLineAnimation
  nameWithType: DialogueManagerBase<ChoiceButtonT>.SkipLineAnimation
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.SkipLineAnimation
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).SkipLineAnimation
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).SkipLineAnimation
- uid: Ibralogue.DialogueManagerBase`1.TryAdvanceDialogue*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.TryAdvanceDialogue
  name: TryAdvanceDialogue
  nameWithType: DialogueManagerBase<ChoiceButtonT>.TryAdvanceDialogue
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.TryAdvanceDialogue
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).TryAdvanceDialogue
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).TryAdvanceDialogue
- uid: Ibralogue.DialogueManagerBase`1.DisplayChoices*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.DisplayChoices
  name: DisplayChoices
  nameWithType: DialogueManagerBase<ChoiceButtonT>.DisplayChoices
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.DisplayChoices
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).DisplayChoices
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).DisplayChoices
- uid: Ibralogue.DialogueManagerBase`1.PrepareChoiceButton*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.PrepareChoiceButton
  name: PrepareChoiceButton
  nameWithType: DialogueManagerBase<ChoiceButtonT>.PrepareChoiceButton
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.PrepareChoiceButton
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).PrepareChoiceButton
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).PrepareChoiceButton
- uid: Ibralogue.DialogueManagerBase`1.ChoiceButtonHandle
  commentId: T:Ibralogue.DialogueManagerBase`1.ChoiceButtonHandle
  parent: Ibralogue
  name: DialogueManagerBase.ChoiceButtonHandle<>
  nameWithType: DialogueManagerBase.ChoiceButtonHandle<>
  fullName: Ibralogue.DialogueManagerBase.ChoiceButtonHandle<>
  nameWithType.vb: DialogueManagerBase.ChoiceButtonHandle(Of )
  fullName.vb: Ibralogue.DialogueManagerBase.ChoiceButtonHandle(Of )
  name.vb: DialogueManagerBase.ChoiceButtonHandle(Of )
  spec.csharp:
  - uid: Ibralogue.DialogueManagerBase`1.ChoiceButtonHandle
    name: DialogueManagerBase.ChoiceButtonHandle
    nameWithType: DialogueManagerBase.ChoiceButtonHandle
    fullName: Ibralogue.DialogueManagerBase.ChoiceButtonHandle
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Ibralogue.DialogueManagerBase`1.ChoiceButtonHandle
    name: DialogueManagerBase.ChoiceButtonHandle
    nameWithType: DialogueManagerBase.ChoiceButtonHandle
    fullName: Ibralogue.DialogueManagerBase.ChoiceButtonHandle
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Choice
  isExternal: true
  name: Choice
  nameWithType: Choice
  fullName: Choice
- uid: Ibralogue.DialogueManagerBase`1.DisplaySpeakerImage*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.DisplaySpeakerImage
  name: DisplaySpeakerImage
  nameWithType: DialogueManagerBase<ChoiceButtonT>.DisplaySpeakerImage
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.DisplaySpeakerImage
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).DisplaySpeakerImage
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).DisplaySpeakerImage
- uid: Ibralogue.DialogueManagerBase`1.CreateChoiceButton*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.CreateChoiceButton
  name: CreateChoiceButton
  nameWithType: DialogueManagerBase<ChoiceButtonT>.CreateChoiceButton
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.CreateChoiceButton
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).CreateChoiceButton
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).CreateChoiceButton
- uid: Ibralogue.DialogueManagerBase`1.ClearChoiceButton*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.ClearChoiceButton
  name: ClearChoiceButton
  nameWithType: DialogueManagerBase<ChoiceButtonT>.ClearChoiceButton
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.ClearChoiceButton
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).ClearChoiceButton
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).ClearChoiceButton
- uid: Ibralogue.DialogueManagerBase`1.RemoveChoiceButton*
  commentId: Overload:Ibralogue.DialogueManagerBase`1.RemoveChoiceButton
  name: RemoveChoiceButton
  nameWithType: DialogueManagerBase<ChoiceButtonT>.RemoveChoiceButton
  fullName: Ibralogue.DialogueManagerBase<ChoiceButtonT>.RemoveChoiceButton
  nameWithType.vb: DialogueManagerBase(Of ChoiceButtonT).RemoveChoiceButton
  fullName.vb: Ibralogue.DialogueManagerBase(Of ChoiceButtonT).RemoveChoiceButton
