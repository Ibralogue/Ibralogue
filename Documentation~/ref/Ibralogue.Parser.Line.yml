### YamlMime:ManagedReference
items:
- uid: Ibralogue.Parser.Line
  commentId: T:Ibralogue.Parser.Line
  id: Line
  parent: Ibralogue.Parser
  children:
  - Ibralogue.Parser.Line.HasMetadata(System.String)
  - Ibralogue.Parser.Line.LineContent
  - Ibralogue.Parser.Line.Speaker
  - Ibralogue.Parser.Line.SpeakerImage
  - Ibralogue.Parser.Line.TryGetMetadataValue(System.String,System.String@)
  langs:
  - csharp
  - vb
  name: Line
  nameWithType: Line
  fullName: Ibralogue.Parser.Line
  type: Class
  source:
    id: Line
    path: ''
    startLine: 1038
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue.Parser
  summary: "\nThe Line struct contains information about an individual line of dialogue.\n"
  remarks: "\nA list of these Line structs makes up a conversation, and a list of conversations makes up a single dialogue file,\ndue to being able to have multiple conversations in a single file for dialogue branching.\n"
  example: []
  syntax:
    content: 'public class Line : IMetadata'
    content.vb: >-
      Public Class Line
          Implements IMetadata
  inheritance:
  - System.Object
  implements:
  - Global.IMetadata
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Ibralogue.Parser.Line.Speaker
  commentId: F:Ibralogue.Parser.Line.Speaker
  id: Speaker
  parent: Ibralogue.Parser.Line
  langs:
  - csharp
  - vb
  name: Speaker
  nameWithType: Line.Speaker
  fullName: Ibralogue.Parser.Line.Speaker
  type: Field
  source:
    id: Speaker
    path: ''
    startLine: 1040
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue.Parser
  syntax:
    content: public string Speaker
    return:
      type: System.String
    content.vb: Public Speaker As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Ibralogue.Parser.Line.LineContent
  commentId: F:Ibralogue.Parser.Line.LineContent
  id: LineContent
  parent: Ibralogue.Parser.Line
  langs:
  - csharp
  - vb
  name: LineContent
  nameWithType: Line.LineContent
  fullName: Ibralogue.Parser.Line.LineContent
  type: Field
  source:
    id: LineContent
    path: ''
    startLine: 1041
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue.Parser
  syntax:
    content: public LineContent LineContent
    return:
      type: Ibralogue.Parser.LineContent
    content.vb: Public LineContent As LineContent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Ibralogue.Parser.Line.SpeakerImage
  commentId: F:Ibralogue.Parser.Line.SpeakerImage
  id: SpeakerImage
  parent: Ibralogue.Parser.Line
  langs:
  - csharp
  - vb
  name: SpeakerImage
  nameWithType: Line.SpeakerImage
  fullName: Ibralogue.Parser.Line.SpeakerImage
  type: Field
  source:
    id: SpeakerImage
    path: ''
    startLine: 1042
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue.Parser
  syntax:
    content: public Sprite SpeakerImage
    return:
      type: Global.Sprite
    content.vb: Public SpeakerImage As Sprite
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Ibralogue.Parser.Line.HasMetadata(System.String)
  commentId: M:Ibralogue.Parser.Line.HasMetadata(System.String)
  id: HasMetadata(System.String)
  parent: Ibralogue.Parser.Line
  langs:
  - csharp
  - vb
  name: HasMetadata(String)
  nameWithType: Line.HasMetadata(String)
  fullName: Ibralogue.Parser.Line.HasMetadata(System.String)
  type: Method
  source:
    id: HasMetadata
    path: ''
    startLine: 1044
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue.Parser
  syntax:
    content: public bool HasMetadata(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function HasMetadata(key As String) As Boolean
  overload: Ibralogue.Parser.Line.HasMetadata*
  implements:
  - Global.IMetadata.HasMetadata(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Ibralogue.Parser.Line.TryGetMetadataValue(System.String,System.String@)
  commentId: M:Ibralogue.Parser.Line.TryGetMetadataValue(System.String,System.String@)
  id: TryGetMetadataValue(System.String,System.String@)
  parent: Ibralogue.Parser.Line
  langs:
  - csharp
  - vb
  name: TryGetMetadataValue(String, out String)
  nameWithType: Line.TryGetMetadataValue(String, out String)
  fullName: Ibralogue.Parser.Line.TryGetMetadataValue(System.String, out System.String)
  type: Method
  source:
    id: TryGetMetadataValue
    path: ''
    startLine: 1047
  assemblies:
  - cs.temp.dll
  namespace: Ibralogue.Parser
  syntax:
    content: public bool TryGetMetadataValue(string key, out string value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function TryGetMetadataValue(key As String, ByRef value As String) As Boolean
  overload: Ibralogue.Parser.Line.TryGetMetadataValue*
  implements:
  - Global.IMetadata.TryGetMetadataValue(System.String,System.String@)
  nameWithType.vb: Line.TryGetMetadataValue(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Ibralogue.Parser.Line.TryGetMetadataValue(System.String, ByRef System.String)
  name.vb: TryGetMetadataValue(String, ByRef String)
references:
- uid: Ibralogue.Parser
  commentId: N:Ibralogue.Parser
  name: Ibralogue.Parser
  nameWithType: Ibralogue.Parser
  fullName: Ibralogue.Parser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Global.IMetadata
  commentId: T:Global.IMetadata
  name: IMetadata
  nameWithType: IMetadata
  fullName: IMetadata
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Ibralogue.Parser.LineContent
  commentId: T:Ibralogue.Parser.LineContent
  parent: Ibralogue.Parser
  name: LineContent
  nameWithType: LineContent
  fullName: Ibralogue.Parser.LineContent
- uid: Global.Sprite
  commentId: '!:Global.Sprite'
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: Sprite
- uid: Ibralogue.Parser.Line.HasMetadata*
  commentId: Overload:Ibralogue.Parser.Line.HasMetadata
  name: HasMetadata
  nameWithType: Line.HasMetadata
  fullName: Ibralogue.Parser.Line.HasMetadata
- uid: Global.IMetadata.HasMetadata(System.String)
  commentId: M:Global.IMetadata.HasMetadata(System.String)
  parent: Global.IMetadata
  isExternal: true
  name: HasMetadata(String)
  nameWithType: IMetadata.HasMetadata(String)
  fullName: IMetadata.HasMetadata(System.String)
  spec.csharp:
  - uid: Global.IMetadata.HasMetadata(System.String)
    name: HasMetadata
    nameWithType: IMetadata.HasMetadata
    fullName: IMetadata.HasMetadata
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.IMetadata.HasMetadata(System.String)
    name: HasMetadata
    nameWithType: IMetadata.HasMetadata
    fullName: IMetadata.HasMetadata
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Ibralogue.Parser.Line.TryGetMetadataValue*
  commentId: Overload:Ibralogue.Parser.Line.TryGetMetadataValue
  name: TryGetMetadataValue
  nameWithType: Line.TryGetMetadataValue
  fullName: Ibralogue.Parser.Line.TryGetMetadataValue
- uid: Global.IMetadata.TryGetMetadataValue(System.String,System.String@)
  commentId: M:Global.IMetadata.TryGetMetadataValue(System.String,System.String@)
  parent: Global.IMetadata
  isExternal: true
  name: TryGetMetadataValue(String, String)
  nameWithType: IMetadata.TryGetMetadataValue(String, String)
  fullName: IMetadata.TryGetMetadataValue(System.String, System.String)
  spec.csharp:
  - uid: Global.IMetadata.TryGetMetadataValue(System.String,System.String@)
    name: TryGetMetadataValue
    nameWithType: IMetadata.TryGetMetadataValue
    fullName: IMetadata.TryGetMetadataValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.IMetadata.TryGetMetadataValue(System.String,System.String@)
    name: TryGetMetadataValue
    nameWithType: IMetadata.TryGetMetadataValue
    fullName: IMetadata.TryGetMetadataValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
